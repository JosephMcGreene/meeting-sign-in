const passport = require("passport");
const mongoose = require("mongoose");
const GoogleStrategy = require("passport-google-oauth20").Strategy;
const keys = require("../config/keys");

// 1 arg  to .model() means I want to fetch something OUT of mongoose
const User = mongoose.model("users");

passport.serializeUser((user, done) => {
	done(null, user.id);
	// the user id above was generated by MongDB; it is NOT the googleID I've been using (see _id key in the db collection)
});

passport.deserializeUser((userID, done) => {
	User.findById(userID).then((user) => {
		done(null, user);
	});
});

const googleOptions = {
	clientID: keys.googleClientID,
	clientSecret: keys.googleClientSecret,
	callbackURL: "/auth/google/callback",
};

passport.use(
	new GoogleStrategy(
		googleOptions,
		(accessToken, refreshToken, profile, done) => {
			User.findOne({ googleID: profile.id }).then((existingUser) => {
				if (existingUser) {
					// then we already have a record with the given profile.id
					done(null, existingUser);
				} else {
					new User({
						googleID: profile.id,
						firstName: profile.name.givenName,
						lastName: profile.name.familyName,
					})
						.save()
						.then((user) => done(null, user));
					// the save() method is what actually saves something into MongoDB
				}
			});
		}
	)
);
